{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAM,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,mBAAmB;QAAa,GAAG,KAAK;;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,2DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,+EACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,oGACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,2KAAgB,QAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,2KAAgB,QAGnC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/components/admin-dashboard-client.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { BookOpen, DollarSign, Users, Activity, CheckCircle, Star, UserCheck, Clock, XCircle } from 'lucide-react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { useState } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\n\nconst enrollmentData = [\n  { name: 'Jan', enrollments: 65 },\n  { name: 'Feb', enrollments: 59 },\n  { name: 'Mar', enrollments: 80 },\n  { name: 'Apr', enrollments: 81 },\n  { name: 'May', enrollments: 56 },\n  { name: 'Jun', enrollments: 55 },\n  { name: 'Jul', enrollments: 40 },\n];\n\nconst revenueData = [\n    { name: 'Jan', revenue: 4000 },\n    { name: 'Feb', revenue: 3000 },\n    { name: 'Mar', revenue: 5000 },\n    { name: 'Apr', revenue: 4500 },\n    { name: 'May', revenue: 6000 },\n    { name: 'Jun', revenue: 5500 },\n    { name: 'Jul', revenue: 7000 },\n];\n\nconst courseCompletionData = [\n    { name: 'Completed', value: 75, fill: '#82ca9d' },\n    { name: 'In Progress', value: 25, fill: '#FAAC4B' },\n];\n\nconst recentTransactions = [\n    { id: 'txn_1', user: 'alex.d@example.com', course: 'Web Development Bootcamp', amount: 19.99, date: '2023-10-26' },\n    { id: 'txn_2', user: 'mia.w@example.com', course: 'The Ultimate Drawing Course', amount: 15.99, date: '2023-10-26' },\n    { id: 'txn_3', user: 'liam.p@example.com', course: 'Pianoforall', amount: 25.00, date: '2023-10-25' },\n    { id: 'txn_4', user: 'olivia.c@example.com', course: 'Digital Marketing Course', amount: 22.50, date: '2023-10-25' },\n];\n\ntype Instructor = {\n    _id: string;\n    name: string;\n    email: string;\n    createdAt: string;\n}\n\ntype AdminDashboardClientProps = {\n  data: {\n    totalStudents: number;\n    totalInstructors: number;\n    totalCourses: number;\n    pendingInstructors: Instructor[];\n    totalRevenue: number;\n    revenueLastMonthPercent: number;\n    studentsLastMonthPercent: number;\n    instructorsLastMonthCount: number;\n    coursesLastMonthCount: number;\n  };\n};\n\nexport default function AdminDashboardClient({ data: initialData }: AdminDashboardClientProps) {\n  const [data, setData] = useState(initialData);\n  const [loadingState, setLoadingState] = useState<{ id: string | null; type: 'approving' | 'rejecting' | null }>({ id: null, type: null });\n  const { toast } = useToast();\n  const router = useRouter();\n\n  const handleApproveInstructor = async (instructorId: string) => {\n    setLoadingState({ id: instructorId, type: 'approving' });\n    try {\n      const response = await fetch('/api/admin/approve-instructor', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ instructorId }),\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.message || 'Failed to approve instructor');\n      }\n      toast({\n        title: 'Success',\n        description: 'Instructor has been approved.',\n      });\n      // Refresh data by filtering out the approved instructor\n      setData(prevData => ({\n          ...prevData,\n          pendingInstructors: prevData.pendingInstructors.filter(inst => inst._id !== instructorId),\n          totalInstructors: prevData.totalInstructors + 1,\n      }));\n      router.refresh();\n    } catch (error: any) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: error.message,\n      });\n    } finally {\n      setLoadingState({ id: null, type: null });\n    }\n  };\n\n  const handleRejectInstructor = async (instructorId: string) => {\n    setLoadingState({ id: instructorId, type: 'rejecting' });\n    try {\n        const response = await fetch('/api/admin/reject-instructor', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ instructorId }),\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            throw new Error(result.message || 'Failed to reject instructor');\n        }\n        toast({\n            title: 'Success',\n            description: 'Instructor has been rejected.',\n        });\n        setData(prevData => ({\n            ...prevData,\n            pendingInstructors: prevData.pendingInstructors.filter(inst => inst._id !== instructorId),\n        }));\n        router.refresh();\n    } catch (error: any) {\n        toast({\n            variant: 'destructive',\n            title: 'Error',\n            description: error.message,\n        });\n    } finally {\n        setLoadingState({ id: null, type: null });\n    }\n  };\n\n\n  return (\n    <div className=\"flex flex-col gap-4 p-4 md:gap-8 md:p-8\">\n      <div className=\"grid gap-4 md:grid-cols-2 md:gap-8 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Students\n            </CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.totalStudents.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{data.studentsLastMonthPercent}% from last month\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Active Instructors\n            </CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.totalInstructors.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{data.instructorsLastMonthCount} from last month\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Courses</CardTitle>\n            <BookOpen className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{data.totalCourses.toLocaleString()}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{data.coursesLastMonthCount} new courses this month\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total Revenue\n            </CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">${data.totalRevenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{data.revenueLastMonthPercent}% from last month\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n       {data.pendingInstructors.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n                <UserCheck className=\"text-orange-500\" />\n                Pending Instructor Approvals\n            </CardTitle>\n            <CardDescription>\n                Review and approve new instructor applications.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Name</TableHead>\n                  <TableHead>Email</TableHead>\n                  <TableHead>Registered</TableHead>\n                  <TableHead className=\"text-right\">Action</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {data.pendingInstructors.map((instructor) => (\n                  <TableRow key={instructor._id}>\n                    <TableCell>{instructor.name}</TableCell>\n                    <TableCell>{instructor.email}</TableCell>\n                    <TableCell>{new Date(instructor.createdAt).toLocaleDateString()}</TableCell>\n                    <TableCell className=\"text-right flex items-center justify-end gap-2\">\n                      <Button \n                        size=\"sm\" \n                        onClick={() => handleApproveInstructor(instructor._id)}\n                        disabled={loadingState.id === instructor._id}\n                      >\n                        {loadingState.id === instructor._id && loadingState.type === 'approving' ? (\n                            <><Clock className=\"mr-2 h-4 w-4 animate-spin\" /> Approving...</>\n                        ) : \"Approve\"}\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        variant=\"destructive\"\n                        onClick={() => handleRejectInstructor(instructor._id)}\n                        disabled={loadingState.id === instructor._id}\n                      >\n                        {loadingState.id === instructor._id && loadingState.type === 'rejecting' ? (\n                            <><Clock className=\"mr-2 h-4 w-4 animate-spin\" /> Rejecting...</>\n                        ) : \"Reject\"}\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n        <Card className=\"col-span-4\">\n          <CardHeader>\n            <CardTitle>Enrollment Statistics</CardTitle>\n            <CardDescription>Daily new enrollments.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={enrollmentData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"enrollments\" fill=\"hsl(var(--primary))\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        <Card className=\"col-span-3\">\n          <CardHeader>\n            <CardTitle>Revenue Overview</CardTitle>\n            <CardDescription>Monthly revenue trends.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--primary))\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          <Card>\n              <CardHeader>\n                  <CardTitle>Course Completion Rate</CardTitle>\n              </CardHeader>\n              <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={200}>\n                      <PieChart>\n                          <Pie data={courseCompletionData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={80} label>\n                          </Pie>\n                          <Tooltip />\n                          <Legend />\n                      </PieChart>\n                  </ResponsiveContainer>\n              </CardContent>\n          </Card>\n\n          <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n                  <Activity className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                  <div className=\"text-2xl font-bold\">573</div>\n                  <p className=\"text-xs text-muted-foreground\">Currently online</p>\n              </CardContent>\n          </Card>\n          \n          <Card>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Average Course Rating</CardTitle>\n                  <Star className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                  <div className=\"text-2xl font-bold\">4.6/5.0</div>\n                  <p className=\"text-xs text-muted-foreground\">Across all courses</p>\n              </CardContent>\n          </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Transactions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>User</TableHead>\n                <TableHead>Course</TableHead>\n                <TableHead>Amount</TableHead>\n                <TableHead>Date</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {recentTransactions.map((txn) => (\n                <TableRow key={txn.id}>\n                  <TableCell>{txn.user}</TableCell>\n                  <TableCell>{txn.course}</TableCell>\n                  <TableCell>${txn.amount.toFixed(2)}</TableCell>\n                  <TableCell>{txn.date}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n      <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">System Status</CardTitle>\n          </CardHeader>\n          <CardContent className=\"mt-4\">\n               <div className=\"flex items-center justify-between p-2 mt-2\">\n                  <p className=\"text-sm text-green-500 flex items-center\"><CheckCircle className=\"h-4 w-4 mr-2\"/>All systems are operational.</p>\n              </div>\n          </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}