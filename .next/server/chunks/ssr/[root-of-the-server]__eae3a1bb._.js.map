{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/lib/mongodb.ts"],"sourcesContent":["// /lib/mongodb.ts\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections from growing exponentially\n * during API Route usage.\n */\nlet cached = (global as any).mongoose;\n\nif (!cached) {\n  cached = (global as any).mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI!, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default dbConnect;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,IAAI,SAAS,yDAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAc,MAAM,IAAI,CAAC,CAAC;YAC1D,OAAO;QACT;IACF;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IUser extends Document {\n  name: string;\n  email: string;\n  password?: string; // Make password optional as we might not always fetch it\n  role: 'student' | 'instructor' | 'admin';\n  status: 'pending' | 'active';\n  createdAt: Date;\n}\n\nconst UserSchema: Schema = new Schema({\n  name: { type: String, required: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true, select: false }, // `select: false` prevents password from being returned by default\n  role: { type: String, enum: ['student', 'instructor', 'admin'], default: 'student', required: true },\n  status: { type: String, enum: ['pending', 'active'], default: 'active', required: true },\n  createdAt: { type: Date, default: Date.now },\n});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,aAAqB,IAAI,mHAAM,CAAC;IACpC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAM;IACxD,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAW;YAAc;SAAQ;QAAE,SAAS;QAAW,UAAU;IAAK;IACnG,QAAQ;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAW;SAAS;QAAE,SAAS;QAAU,UAAU;IAAK;IACvF,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C;uCAEe,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/models/Course.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface ICourse extends Document {\n  title: string;\n  instructor: string;\n  description: string;\n  category: string;\n  imageId: string;\n  duration: string;\n  rating: number;\n}\n\nconst CourseSchema: Schema = new Schema({\n  // Although the local data has an 'id', MongoDB will automatically create a unique '_id'.\n  // We can rely on that instead of managing our own.\n  title: { type: String, required: true },\n  instructor: { type: String, required: true },\n  description: { type: String, required: true },\n  category: { type: String, required: true },\n  imageId: { type: String, required: true },\n  duration: { type: String, required: true },\n  rating: { type: Number, required: true },\n});\n\nexport default mongoose.models.Course || mongoose.model<ICourse>('Course', CourseSchema);"],"names":[],"mappings":";;;;AAAA;;AAYA,MAAM,eAAuB,IAAI,mHAAM,CAAC;IACtC,yFAAyF;IACzF,mDAAmD;IACnD,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,YAAY;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC3C,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;IACxC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;AACzC;uCAEe,oHAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,oHAAQ,CAAC,KAAK,CAAU,UAAU","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/components/admin-dashboard-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin-dashboard-client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-dashboard-client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/components/admin-dashboard-client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/admin-dashboard-client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/admin-dashboard-client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/app/admin/dashboard/page.tsx"],"sourcesContent":["import dbConnect from '@/lib/mongodb';\nimport User from '@/models/User';\nimport Course from '@/models/Course';\nimport AdminDashboardClient from '@/components/admin-dashboard-client';\n\nasync function getDashboardData() {\n  await dbConnect();\n  try {\n    const totalStudents = await User.countDocuments({ role: 'student' });\n    const totalInstructors = await User.countDocuments({ role: 'instructor', status: 'active' });\n    const totalCourses = await Course.countDocuments({});\n    const pendingInstructors = await User.find({ role: 'instructor', status: 'pending' }).lean();\n\n    \n    // Revenue and other data points are static for now\n    // as the corresponding models/collections don't exist.\n    return {\n      totalStudents,\n      totalInstructors,\n      totalCourses,\n      pendingInstructors: JSON.parse(JSON.stringify(pendingInstructors)), // Serialize for client component\n      totalRevenue: 150231.89, // Static\n      revenueLastMonthPercent: 20.1, // Static\n      studentsLastMonthPercent: 12, // Static\n      instructorsLastMonthCount: 5, // Static\n      coursesLastMonthCount: 30, // Static\n    };\n  } catch (error) {\n    console.error(\"Failed to fetch dashboard data:\", error);\n    // Return default/zero values in case of a DB error\n    return {\n      totalStudents: 0,\n      totalInstructors: 0,\n      totalCourses: 0,\n      pendingInstructors: [],\n      totalRevenue: 0,\n      revenueLastMonthPercent: 0,\n      studentsLastMonthPercent: 0,\n      instructorsLastMonthCount: 0,\n      coursesLastMonthCount: 0,\n    };\n  }\n}\n\n\nexport default async function AdminDashboardPage() {\n  const data = await getDashboardData();\n  \n  return <AdminDashboardClient data={data} />;\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,eAAe;IACb,MAAM,IAAA,gIAAS;IACf,IAAI;QACF,MAAM,gBAAgB,MAAM,gIAAI,CAAC,cAAc,CAAC;YAAE,MAAM;QAAU;QAClE,MAAM,mBAAmB,MAAM,gIAAI,CAAC,cAAc,CAAC;YAAE,MAAM;YAAc,QAAQ;QAAS;QAC1F,MAAM,eAAe,MAAM,kIAAM,CAAC,cAAc,CAAC,CAAC;QAClD,MAAM,qBAAqB,MAAM,gIAAI,CAAC,IAAI,CAAC;YAAE,MAAM;YAAc,QAAQ;QAAU,GAAG,IAAI;QAG1F,mDAAmD;QACnD,uDAAuD;QACvD,OAAO;YACL;YACA;YACA;YACA,oBAAoB,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;YAC9C,cAAc;YACd,yBAAyB;YACzB,0BAA0B;YAC1B,2BAA2B;YAC3B,uBAAuB;QACzB;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,mDAAmD;QACnD,OAAO;YACL,eAAe;YACf,kBAAkB;YAClB,cAAc;YACd,oBAAoB,EAAE;YACtB,cAAc;YACd,yBAAyB;YACzB,0BAA0B;YAC1B,2BAA2B;YAC3B,uBAAuB;QACzB;IACF;AACF;AAGe,eAAe;IAC5B,MAAM,OAAO,MAAM;IAEnB,qBAAO,8OAAC,6JAAoB;QAAC,MAAM;;;;;;AACrC","debugId":null}}]
}