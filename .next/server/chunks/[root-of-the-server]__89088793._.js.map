{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/lib/mongodb.ts"],"sourcesContent":["// /lib/mongodb.ts\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\n\n/**\n * Global is used here to maintain a cached connection across hot reloads\n * in development. This prevents connections from growing exponentially\n * during API Route usage.\n */\nlet cached = (global as any).mongoose;\n\nif (!cached) {\n  cached = (global as any).mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    cached.promise = mongoose.connect(MONGODB_URI!, opts).then((mongoose) => {\n      return mongoose;\n    });\n  }\n  cached.conn = await cached.promise;\n  return cached.conn;\n}\n\nexport default dbConnect;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA;;;;CAIC,GACD,IAAI,SAAS,yDAAgB,QAAQ;AAErC,IAAI,CAAC,QAAQ;IACX,SAAS,yDAAgB,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAClE;AAEA,eAAe;IACb,IAAI,OAAO,IAAI,EAAE;QACf,OAAO,OAAO,IAAI;IACpB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,MAAM,OAAO;YACX,gBAAgB;QAClB;QAEA,OAAO,OAAO,GAAG,oHAAQ,CAAC,OAAO,CAAC,aAAc,MAAM,IAAI,CAAC,CAAC;YAC1D,OAAO;QACT;IACF;IACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AACpB;uCAEe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document } from 'mongoose';\n\nexport interface IUser extends Document {\n  name: string;\n  email: string;\n  password?: string; // Make password optional as we might not always fetch it\n  role: 'student' | 'instructor' | 'admin';\n  status: 'pending' | 'active';\n  createdAt: Date;\n}\n\nconst UserSchema: Schema = new Schema({\n  name: { type: String, required: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true, select: false }, // `select: false` prevents password from being returned by default\n  role: { type: String, enum: ['student', 'instructor', 'admin'], default: 'student', required: true },\n  status: { type: String, enum: ['pending', 'active'], default: 'active', required: true },\n  createdAt: { type: Date, default: Date.now },\n});\n\nexport default mongoose.models.User || mongoose.model<IUser>('User', UserSchema);\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,aAAqB,IAAI,mHAAM,CAAC;IACpC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAM;IACxD,MAAM;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAW;YAAc;SAAQ;QAAE,SAAS;QAAW,UAAU;IAAK;IACnG,QAAQ;QAAE,MAAM;QAAQ,MAAM;YAAC;YAAW;SAAS;QAAE,SAAS;QAAU,UAAU;IAAK;IACvF,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C;uCAEe,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///D:/EduMate/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport dbConnect from '@/lib/mongodb';\nimport User from '@/models/User';\nimport bcrypt from 'bcryptjs';\nimport * as z from 'zod';\nimport jwt from 'jsonwebtoken';\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\nexport async function POST(req: NextRequest) {\n  try {\n    await dbConnect();\n    const body = await req.json();\n\n    const validation = loginSchema.safeParse(body);\n    if (!validation.success) {\n      return NextResponse.json({ message: 'Invalid input', errors: validation.error.errors }, { status: 400 });\n    }\n\n    const { email, password } = validation.data;\n\n    const user = await User.findOne({ email }).select('+password');\n    if (!user) {\n      return NextResponse.json({ message: 'Invalid email or password' }, { status: 401 });\n    }\n    \n    // Check if instructor account is approved\n    if (user.role === 'instructor' && user.status === 'pending') {\n        return NextResponse.json({ message: 'Your instructor account is pending approval.' }, { status: 403 });\n    }\n\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) {\n      return NextResponse.json({ message: 'Invalid email or password' }, { status: 401 });\n    }\n    \n    const tokenPayload = { id: user._id, name: user.name, role: user.role, status: user.status };\n    const token = jwt.sign(tokenPayload, process.env.JWT_SECRET!, { expiresIn: '1h' });\n    \n    const response = NextResponse.json({ message: 'Login successful', user: { id: user._id, name: user.name, email: user.email, role: user.role } });\n    \n    response.cookies.set('token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 3600, // 1 hour\n      path: '/',\n    });\n\n    return response;\n\n  } catch (error) {\n    console.error('Login error:', error);\n    return NextResponse.json({ message: 'An internal server error occurred' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,cAAc,gJAAQ,CAAC;IAC3B,OAAO,gJAAQ,GAAG,KAAK,CAAC;IACxB,UAAU,gJAAQ,GAAG,GAAG,CAAC,GAAG;AAC9B;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,IAAA,kIAAS;QACf,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,aAAa,YAAY,SAAS,CAAC;QACzC,IAAI,CAAC,WAAW,OAAO,EAAE;YACvB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAiB,QAAQ,WAAW,KAAK,CAAC,MAAM;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACxG;QAEA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,WAAW,IAAI;QAE3C,MAAM,OAAO,MAAM,kIAAI,CAAC,OAAO,CAAC;YAAE;QAAM,GAAG,MAAM,CAAC;QAClD,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,0CAA0C;QAC1C,IAAI,KAAK,IAAI,KAAK,gBAAgB,KAAK,MAAM,KAAK,WAAW;YACzD,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA+C,GAAG;gBAAE,QAAQ;YAAI;QACxG;QAEA,MAAM,kBAAkB,MAAM,8IAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QACpE,IAAI,CAAC,iBAAiB;YACpB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,eAAe;YAAE,IAAI,KAAK,GAAG;YAAE,MAAM,KAAK,IAAI;YAAE,MAAM,KAAK,IAAI;YAAE,QAAQ,KAAK,MAAM;QAAC;QAC3F,MAAM,QAAQ,kJAAG,CAAC,IAAI,CAAC,cAAc,QAAQ,GAAG,CAAC,UAAU,EAAG;YAAE,WAAW;QAAK;QAEhF,MAAM,WAAW,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAoB,MAAM;gBAAE,IAAI,KAAK,GAAG;gBAAE,MAAM,KAAK,IAAI;gBAAE,OAAO,KAAK,KAAK;gBAAE,MAAM,KAAK,IAAI;YAAC;QAAE;QAE9I,SAAS,OAAO,CAAC,GAAG,CAAC,SAAS,OAAO;YACnC,UAAU;YACV,QAAQ,oDAAyB;YACjC,UAAU;YACV,QAAQ;YACR,MAAM;QACR;QAEA,OAAO;IAET,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAoC,GAAG;YAAE,QAAQ;QAAI;IAC3F;AACF","debugId":null}}]
}